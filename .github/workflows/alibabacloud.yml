name: Deploy to Aliyun ECS

on:
  push:
    branches: [ main ]

env:
  SERVER_IP: ${{ secrets.ALIYUN_SERVER_IP }}
  SERVER_USER: ${{ secrets.ALIYUN_SERVER_USER }}
  DEPLOY_DIR: /opt/payforit

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # 前端构建
    - name: Build Frontend
      run: |
        cd ebook_store_frontend
        npm install
        npm run build
        tar -czf frontend-dist.tar.gz dist/*
    
    # 后端构建
    - name: Build Backend
      run: |
        cd ebook_store_backend
        pip install -r requirements.txt
        tar -czf backend-dist.tar.gz --exclude='venv' --exclude='.git' .
    
    # 传输文件到阿里云 ECS
    - name: Copy files to Aliyun ECS
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ env.SERVER_IP }}
        username: ${{ env.SERVER_USER }}
        key: ${{ secrets.ALIYUN_SSH_KEY }}
        source: "*.tar.gz"
        target: ${{ env.DEPLOY_DIR }}
    
    # 执行部署脚本
    - name: Run Deployment Script
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ env.SERVER_IP }}
        username: ${{ env.SERVER_USER }}
        key: ${{ secrets.ALIYUN_SSH_KEY }}
        script: |
          cd ${{ env.DEPLOY_DIR }}
          
          # 解压前端
          tar -xzf frontend-dist.tar.gz -C ebook_store_frontend
          
          # 解压后端
          tar -xzf backend-dist.tar.gz -C ebook_store_backend
          
          # 部署前端
          sudo cp -r ebook_store_frontend/dist/* /var/www/html/
          sudo chown -R www-data:www-data /var/www/html
          
          # 部署后端
          cd ebook_store_backend
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          source venv/bin/activate
          pip install -r requirements.txt
          
          # 重启服务
          sudo systemctl restart nginx
          sudo systemctl restart myproject
